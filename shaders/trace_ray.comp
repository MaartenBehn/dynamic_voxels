#version 450 core

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

#include "binding.glsl"
#include "ray.glsl"
#include "cgs.glsl"

#define MAX_RAY_STEPS 50
#define EPSILON 0.0001
#define TO_1D(pos, size) ((pos.z * size * size) + (pos.y * size) + pos.x)

void main () {
    Ray ray = init_ray(POS, DIR, gl_GlobalInvocationID.xy, RES);

    vec4 color = vec4(ray.dir * 1.0, 1);

    float time = TIME;
    //vec4 new_color = ray_hits_cgs_object(ray, get_test_sphere(time, vec3(0.0, 0.0, 0.0)));
    vec4 new_color = render_cgs_tree(ray);
    if (new_color.w > 0) {
        color = new_color;
    }

    imageStore(img, ivec2(gl_GlobalInvocationID.xy), color);
}
